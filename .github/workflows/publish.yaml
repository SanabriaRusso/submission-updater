name: Publish

on:
  # push:
  #   tags:
  #   - '*'
  workflow_dispatch:
    inputs:
      docker_tag_prefix:
        description: "Enter the Docker Tag Prefix (e.g adhoc-test)"
        required: true
        type: string
      mina_branch:
        description: 'Branch of MinaProtocol/mina to build from'
        required: true
        default: 'delegation_verify_over_stdin_rc_base'
      dune_profile:
        description: 'Dune profile to build with'
        required: true
        default: 'devnet'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_TAG_PREFIX: ${{ github.event.inputs.docker_tag_prefix }}
  MINA_BRANCH: ${{ github.event.inputs.mina_branch }}
  DUNE_PROFILE: ${{ github.event.inputs.dune_profile }}

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: üè∑Ô∏è Generate Tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            PREFIX=${{ env.DOCKER_TAG_PREFIX }}
          elif [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.event.ref }}" ]; then
            PREFIX=$(basename ${{ github.ref }})
          else
            echo "Invalid event. Exiting..."
            exit 1
          fi
          echo "TAG=$PREFIX-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: üîë Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: üîç Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.TAG }}
      - name: üì¶ Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: üõ†Ô∏è Build Docker Image
        run: |
          TAG=${{ env.TAG }}
          MINA_BRANCH=${{ env.MINA_BRANCH }}
          DUNE_PROFILE=${{ env.DUNE_PROFILE }}
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          nix-shell --run "make docker-delegation-verify"
      - name: üöö Push Docker Image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
